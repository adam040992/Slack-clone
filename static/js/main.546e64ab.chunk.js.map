{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","components/ChatInput.js","components/Message.js","components/Chat.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","src","photoURL","alt","displayName","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMassages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContainer","color","fadeIn","className","AppBody","exact","path","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.546e64ab.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBG2DzpLI94uR2oBYh7760cXgA1vi3eL_k\",\r\n    authDomain: \"slack-clone-abcce.firebaseapp.com\",\r\n    projectId: \"slack-clone-abcce\",\r\n    storageBucket: \"slack-clone-abcce.appspot.com\",\r\n    messagingSenderId: \"377132914242\",\r\n    appId: \"1:377132914242:web:41abb38a5ed8c730753fdb\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { auth, provider, db };","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Avatar } from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../firebase';\r\n\r\nfunction Header() {\r\n    const [user] = useAuthState(auth);\r\n\r\n    return (\r\n        <HeaderContainer>\r\n            {/* Header Left */}\r\n            <HeaderLeft>\r\n                <HeaderAvatar\r\n                    onClick={() => auth.signOut()} \r\n                    src={user?.photoURL}\r\n                    alt={user?.displayName}\r\n                />\r\n                <AccessTimeIcon />\r\n            </HeaderLeft>\r\n\r\n            {/* Header Search */}\r\n            <HeaderSearch>\r\n                <SearchIcon />\r\n                <input placeholder='Search' />\r\n            </HeaderSearch>\r\n\r\n            {/* Header Right */}\r\n            <HeaderRight>\r\n                <HelpOutlineIcon />\r\n            </HeaderRight>\r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\nconst HeaderContainer = styled.div`\r\n    display: flex;\r\n    position: fixed;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 10px 0;\r\n    background-color: var(--slack-color);\r\n    color: white;\r\n`;\r\n\r\nconst HeaderSearch = styled.div`\r\n    flex: 0.4;\r\n    opacity: 1;\r\n    border-radius: 6px;\r\n    background-color: #421f44;\r\n    text-align: center;\r\n    display: flex;\r\n    padding: 0 50px;\r\n    color: gray;\r\n    border: 1px gray solid;\r\n\r\n    > input {\r\n        border: none;\r\n        background-color: transparent;\r\n        text-align: center;\r\n        min-width: 30vw;\r\n        outline: 0;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n    flex: 0.3;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 20px;\r\n\r\n    > .MuiSvgIcon-root {\r\n        margin-left: auto;\r\n        margin-right: 30px;\r\n    }\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n    flex: 0.3;\r\n    display: flex;\r\n    align-items: flex-end;\r\n\r\n    > .MuiSvgIcon-root {\r\n        margin-left: auto;\r\n        margin-right: 20px;\r\n    }\r\n`;\r\n\r\nconst HeaderAvatar = styled(Avatar)`\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        opacity: 0.8;\r\n    }\r\n`;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    roomId: null,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n      state.roomId = action.payload.roomId;;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { db } from '../firebase';\r\nimport { enterRoom } from '../features/appSlice'; \r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\r\n    const dispatch = useDispatch();\r\n    \r\n    const addChannel = () => {\r\n        const channelName = prompt('Please enter the channel name');\r\n\r\n        if (channelName) {\r\n            db.collection('rooms').add({\r\n                name: channelName,\r\n            });\r\n        } \r\n    };\r\n\r\n    const selectChannel = () => {\r\n        if (id) {\r\n            dispatch(enterRoom({\r\n                roomId: id\r\n            }))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SidebarOptionContainer\r\n            onClick={addChannelOption ? addChannel : selectChannel}\r\n        >\r\n            {Icon && <Icon fontSize='small' style={{ padding: 10 }} />}\r\n            {Icon ? (\r\n                <h3>{title}</h3>\r\n            ) : (\r\n                <SidebarOptionChannel>\r\n                    <span>#</span> {title}\r\n                </SidebarOptionChannel>\r\n            )}\r\n        </SidebarOptionContainer>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n\r\nconst SidebarOptionContainer = styled.div`\r\n    display: flex;\r\n    font-size: 12px;\r\n    align-items: center;\r\n    padding-left: 2px;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        opacity: 0.9;\r\n        background-color: #340e36;\r\n    }\r\n\r\n    > h3 {\r\n        font-weight: 500;\r\n    }\r\n\r\n    > h3 > span {\r\n        padding: 15px;\r\n    }\r\n`;\r\n\r\nconst SidebarOptionChannel = styled.h3`\r\n    padding: 10px 0;\r\n    font-weight: 300;\r\n\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport CreateIcon from '@material-ui/icons/Create'\r\nimport SidebarOption from './SidebarOption';\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment'\r\nimport InboxIcon from '@material-ui/icons/Inbox'\r\nimport DraftsIcon from '@material-ui/icons/Drafts'\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt'\r\nimport AppsIcon from '@material-ui/icons/Apps'\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nimport { useCollection } from 'react-firebase-hooks/firestore';\r\nimport { auth, db } from '../firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfunction Sidebar() {\r\n    const [channels, loading, error] = useCollection(db.collection('rooms'));\r\n    const [user] = useAuthState(auth);\r\n\r\n\r\n    return (\r\n        <SidebarContainer>\r\n            <SidebarHeader>\r\n               <SidebarInfo>\r\n                   <h2>My Slack</h2>\r\n                   <h3>\r\n                       <FiberManualRecordIcon />\r\n                       {user.displayName}\r\n                   </h3>\r\n               </SidebarInfo>\r\n               <CreateIcon />\r\n            </SidebarHeader>\r\n\r\n            <SidebarOption Icon={InsertCommentIcon} title='Threads'/>\r\n            <SidebarOption Icon={InboxIcon} title='Mentions & reacttons'/>\r\n            <SidebarOption Icon={DraftsIcon} title='Saved Items'/>\r\n            <SidebarOption Icon={BookmarkBorderIcon} title='Channel browser'/>\r\n            <SidebarOption Icon={PeopleAltIcon} title='People & user groups'/>\r\n            <SidebarOption Icon={AppsIcon} title='Apps'/>\r\n            <SidebarOption Icon={FileCopyIcon} title='File browser'/>\r\n            <SidebarOption Icon={ExpandLessIcon} title='Show less'/>\r\n            <hr />\r\n            <SidebarOption Icon={ExpandMoreIcon} title='Channels'/>\r\n            <hr />\r\n            <SidebarOption Icon={AddIcon} addChannelOption title='Add Channel'/>\r\n\r\n            {channels?.docs.map(doc => (\r\n                <SidebarOption \r\n                    key={doc.id} \r\n                    id={doc.id}  \r\n                    title={doc.data().name}\r\n                />\r\n            ))}\r\n        </SidebarContainer>\r\n    );\r\n}\r\n\r\nexport default Sidebar\r\n\r\nconst SidebarContainer = styled.div`\r\n    background-color: var(--slack-color);\r\n    color: white;\r\n    flex: 0.3;\r\n    border-top: 1px solid #49274b;\r\n    max-width: 260px;\r\n    margin-top: 60px;\r\n\r\n    > hr {\r\n        margin-top: 10px;\r\n        margin-bottom: 10px;\r\n        border: 1px solid #49274b;\r\n    }\r\n`;\r\n\r\nconst SidebarHeader = styled.div`\r\n    display: flex;\r\n    border-bottom: 1px solid #49274b;\r\n    padding: 13px;\r\n\r\n    > .MuiSvgIcon-root {\r\n        padding: 8px;\r\n        color: #49274b;\r\n        font-size: 18px;\r\n        background-color: white;\r\n        border-radius: 999px;\r\n        align-self: center;\r\n    }\r\n`;\r\n\r\nconst SidebarInfo = styled.div`\r\n    flex: 1;\r\n\r\n    > h2 {\r\n        font-size: 15px;\r\n        font-weight: 900;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    > h3 {\r\n        display: flex;\r\n        font-size: 13px;\r\n        font-weight: 400;\r\n        align-items: center;\r\n    }\r\n\r\n    > h3 > .MuiSvgIcon-root {\r\n        font-size: 14px;\r\n        margin-top: 1px;\r\n        margin-right: 2px;\r\n        color: green;\r\n    }\r\n`;\r\n\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport { Button } from '@material-ui/core';\r\nimport { auth, db } from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfunction ChatInput({ channelName, channelId, chatRef }) {\r\n    const [input, setInput] = useState(\"\")\r\n    const [user] = useAuthState(auth);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!channelId) {\r\n            return false;\r\n        }\r\n\r\n        db.collection('rooms').doc(channelId).collection('messages').add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user.displayName,\r\n            userImage: user.photoURL\r\n        });\r\n\r\n        chatRef.current.scrollIntoView({\r\n            behavior: \"smooth\"\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <ChatInputContainer>\r\n            <form>\r\n                <input \r\n                    value={input} \r\n                    onChange={e => setInput(e.target.value)} \r\n                    placeholder={`Message #${channelName}`} \r\n                />\r\n                <Button hidden type='submit' onClick={sendMessage}>\r\n                    SEND\r\n                </Button>\r\n            </form>\r\n        </ChatInputContainer>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n\r\nconst ChatInputContainer = styled.div`\r\n    border-radius: 30px;\r\n\r\n    > form {\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    > form > input {\r\n        position: fixed;\r\n        bottom: 30px;\r\n        width: 60%;\r\n        border: 1px solid gray;\r\n        border-radius: 3px;\r\n        padding: 20px;\r\n        outline: none;\r\n    }\r\n\r\n    > form > button {\r\n        display: none !important;\r\n        \r\n    }\r\n`;","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nfunction Message({ message, timestamp, user, userImage}) {\r\n    return (\r\n        <MessageContainer>\r\n            <img src={userImage} alt='userImage' />\r\n            <MessageInfo>\r\n                <h4>\r\n                    {user} {' '}\r\n                    <span>\r\n                        {new Date(timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                </h4>\r\n                <p>\r\n                    {message}\r\n                </p>\r\n            </MessageInfo>\r\n        </MessageContainer>\r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\nconst MessageContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    > img {\r\n        height: 50px;\r\n        border-radius: 8px;\r\n    }\r\n\r\n`;\r\n\r\nconst MessageInfo = styled.div`\r\n    padding-left: 10px;\r\n\r\n    > h4 > span {\r\n        color: gray;\r\n        font-weight: 300;\r\n        margin-left: 4px;\r\n        font-size: 10px;\r\n    }\r\n`;\r\n","import React, { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport StarBorderOutlineIcon from '@material-ui/icons/StarBorderOutlined';\r\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\r\nimport ChatInput from './ChatInput';\r\nimport Message from './Message';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { selectRoomId } from '../features/appSlice';\r\nimport { useDocument, useCollection } from 'react-firebase-hooks/firestore';\r\nimport { db } from '../firebase';\r\n\r\nfunction Chat() {\r\n    const chatRef = useRef(null);\r\n    const roomId = useSelector(selectRoomId);\r\n    const [roomDetails] = useDocument(\r\n        roomId && db.collection('rooms').doc(roomId)\r\n    );\r\n    const [roomMessages, loading] = useCollection(\r\n        roomId && \r\n            db\r\n            .collection('rooms')\r\n            .doc(roomId)\r\n            .collection('messages')\r\n            .orderBy(\"timestamp\", 'asc')\r\n    );\r\n\r\n    useEffect(() => {\r\n        chatRef?.current?.scrollIntoView({\r\n            behavior: \"smooth\",\r\n        });\r\n    }, [roomId, loading]);\r\n\r\n    return (\r\n        <ChatContainer>\r\n            {roomDetails && roomMessages && (\r\n                <>\r\n                <Header>\r\n                    <HeaderLeft>\r\n                        <h4><strong>#{roomDetails?.data().name}</strong></h4>\r\n                        <StarBorderOutlineIcon />\r\n                    </HeaderLeft>\r\n    \r\n                    <HeaderRight>\r\n                        <p>\r\n                            <InfoOutlineIcon /> Details\r\n                        </p>\r\n                    </HeaderRight>\r\n                </Header>\r\n    \r\n                <ChatMassages>\r\n                    {roomMessages?.docs.map(doc => {\r\n                        const { message, timestamp, user, userImage } = doc.data();\r\n    \r\n                        return (\r\n                            <Message \r\n                                key={doc.id}\r\n                                message={message}\r\n                                timestamp={timestamp}\r\n                                user={user}\r\n                                userImage={userImage}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <ChatBottom ref={chatRef} />\r\n                </ChatMassages>\r\n    \r\n                <ChatInput \r\n                    chatRef={chatRef}\r\n                    channelName={roomDetails?.data().name}\r\n                    channelId={roomId}\r\n                    />\r\n                </>\r\n            )}\r\n            \r\n        </ChatContainer>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n    border-bottom: 1px solid lightgray;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > h4 {\r\n        display: flex;\r\n        text-transform: lowercase;\r\n    }\r\n\r\n    > .MuiSvgIcon-root {\r\n        margin-left: 10px;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n    > p {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 14px;\r\n    }\r\n\r\n    > p > .MuiSvgIcon-root {\r\n        margin-right: 5px !important;\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nconst ChatBottom = styled.div`\r\n    padding-bottom: 200px;\r\n`;\r\n\r\nconst ChatMassages = styled.div``;\r\n\r\n\r\nconst ChatContainer = styled.div`\r\n    flex: 0.7;\r\n    flex-grow: 1;\r\n    margin-top: 60px;\r\n    overflow-y: scroll;\r\n`;","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { auth, provider } from '../firebase';\r\n\r\nfunction Login() {\r\n    const signIn = (e) => {\r\n        e.preventDefault()\r\n        auth.signInWithPopup(provider).catch((error) => alert(error.message));\r\n    }\r\n\r\n    return (\r\n        <LoginContainer>\r\n            <LoginInnerContainer>\r\n                <img src=\"https://cdn.worldvectorlogo.com/logos/slack-new-logo.svg\"\r\n                    alt='Slack Image'\r\n                />\r\n                <h1>Sign In to Slack</h1>\r\n                <p>Slack Clone App</p>\r\n\r\n                <Button onClick={signIn}>\r\n                    Sign in with Google\r\n                </Button>\r\n            </LoginInnerContainer>\r\n        </LoginContainer>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\nconst LoginContainer = styled.div`\r\n    background-color: #f8f8f8;\r\n    height: 100vh;\r\n    display: grid;\r\n    place-items: center;\r\n`;\r\n\r\nconst LoginInnerContainer = styled.div`    \r\n    padding: 100px;\r\n    text-align: center;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.4);\r\n\r\n    > img {\r\n        object-fit: contain;\r\n        height: 100px;\r\n        margin-bottom: 40px;\r\n    }\r\n\r\n    > Button {\r\n        margin-top: 50px;\r\n        text-transform: inherit !important;\r\n        background-color: #0a8d48 !important;\r\n        color: white;\r\n    }\r\n`;\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\nimport Chat from './components/Chat';\r\nimport Login from './components/Login';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from './firebase';\r\nimport Spinner from 'react-spinkit';\r\n\r\n\r\nfunction App() {\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  if(loading) {\r\n    return (\r\n      <AppLoading>\r\n        <AppLoadingContainer>\r\n            <img\r\n              src='https://cdn.worldvectorlogo.com/logos/slack-new-logo.svg'\r\n              alt='Slack Logo'  \r\n            />\r\n            <Spinner \r\n              name=\"ball-spin-fade-loader\" \r\n              color=\"black\"\r\n              fadeIn=\"none\"\r\n            />\r\n        </AppLoadingContainer>\r\n      </AppLoading>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n\r\n    <Router>\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <>\r\n      <Header />\r\n      <AppBody>\r\n        <Sidebar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Chat />\r\n          </Route>\r\n        </Switch>\r\n      </AppBody>\r\n      </>\r\n      )}\r\n    </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppLoading = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n`;\r\n\r\nconst AppLoadingContainer = styled.div`\r\n  text-align: center;\r\n  padding-bottom: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  > img {\r\n    height: 100px;\r\n    padding: 20px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nconst AppBody = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n`;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}